@model Web.Entity.Dto.UsersDto
@{
    Layout = "~/Views/Shared/_Layout.cshtml";
}

<div class="container-fluid" id="container-wrapper">
    <div class="d-sm-flex align-items-center justify-content-between mb-4">
        <h1 class="h3 mb-0 text-gray-800">Add/Modify User</h1>
        <ol class="breadcrumb">
            <li class="breadcrumb-item"><a href="./">Users</a></li>
            <li class="breadcrumb-item">User</li>
        </ol>
    </div>
    <div class="row">
        <div class="col-lg-12">
            <!-- Form Basic -->
            <div class="card mb-4">
                <div class="card-body">
                    <form id="AddModifyForm">
                        <input type="hidden" value="@Model.UserId" name="UserId" />
                        <div class="row">
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="floating-label">Role</label>
                                    <select name="RoleId" id="RoleId"
                                            class="form-control">
                                        <option value="">Select Value</option>
                                    </select>
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="floating-label">User Type</label>
                                    <select name="UserTypeId" id="UserTypeId"
                                            class="form-control">
                                        <option value="">Select Value</option>

                                    </select>
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Full Name</label>
                                    <input type="text" value="@Model.FullName"
                                           name="FullName"
                                           placeholder="Enter Full Name"
                                           class="form-control" autocomplete="off" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>User Name</label>
                                    <input type="text" value="@Model.DescryptUserName"
                                           name="UserName"
                                           placeholder="Enter User Name"
                                           class="form-control" autocomplete="off" />
                                </div>
                            </div>
                            @if (Model.UserId == 0)
                            {
                                <div class="col-md-4">
                                    <div class="form-group">
                                        <label>Password</label>
                                        <input type="password" value="@Model.Password"
                                               name="Password"
                                               placeholder="Enter Password"
                                               class="form-control" autocomplete="off" />
                                    </div>
                                </div>
                            }

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Phone Number</label>
                                    <input type="text" value="@Model.ContactNumber"
                                           name="ContactNumber"
                                           placeholder="Enter Phone Number"
                                           class="form-control" />
                                </div>
                            </div>
                            <div class="col-md-4">
                                <div class="form-group">
                                    <label>Email Address</label>
                                    <input type="text" value="@Model.EmailAddress"
                                           name="EmailAddress"
                                           placeholder="Enter Email Address"
                                           class="form-control" />
                                </div>
                            </div>

                            <div class="col-md-4">
                                <div class="form-group">
                                    <label class="floating-label">Status</label>
                                    <select name="UserStatusId" id="UserStatusId"
                                            class="form-control">
                                        <option value="">Select Value</option>
                                    </select>
                                </div>
                            </div>
                        </div>
                        <button type="submit" id="btnSave" name="SaveButton" class="btn btn-primary btn-md"><i class="fa fa-save"></i> <span>Save</span> </button>
                        <a href="/UserList" class="btn btn-danger"><i class="fa fa-window-close"></i> Close</a>
                    </form>
                </div>
            </div>
        </div>


    </div>
    <!--Row-->
</div>
@Scripts.Render("~/web/backend/jquery-ui")
<script src="~/Assets/Backend/js/jquery.validate.min.js"></script>
<script>
    $(document).ready(function () {
        LoadRole('@Model.RoleId');
        LoadUserTypeForUserList('@Model.UserTypeId');
        LoadUserStatus('@Model.UserStatusId');
    })
    var $checkoutForm = $('#AddModifyForm').validate({
        ignore: [],
        rules: {
            'RoleId': {
                required: true
            },
            'FullName': {
                required: true,
                maxlength: 200
            },
           
            'UserName': {
                required: true,
                maxlength: 50,
            },
            'Password': {
                required: true,
                maxlength: 50,
            },
            'ContactNumber': {
                required: true,
                maxlength: 20,
            },
            'UserTypeId': {
                required: true
            },
            'UserStatusId': {
                required: true
            },
        },
        submitHandler: function (form) {
            $("#btnSave").prop('disabled', true)
            $("#btnSave span").html('Saving............')

            var id = $('input[name="UserId"').val();
            var url = "/Users/Insert";
            if (parseInt(id) > 0) {
                url = "/Users/Update";
            }
            $.ajax({
                type: "POST",
                url: url,
                data: $("#AddModifyForm").serialize(),
                success: function (message) {
                    showResultMessage(message, "/UserList")
                },
                error: function (message) {
                    showResultMessage(message)
                }
            })

        },

        errorPlacement: function errorPlacement(error, element) {
            var $parent = $(element).parents('.form-group');

            // Do not duplicate errors
            if ($parent.find('.jquery-validation-error').length) {
                return false;
            }

            $parent.append(
                error.addClass('jquery-validation-error small form-text invalid-feedback')
            );
        },
        highlight: function (element) {
            var $el = $(element);
            var $parent = $el.parents('.form-group');

            $el.addClass('is-invalid');

            // Select2 and Tagsinput
            if ($el.hasClass('select2-hidden-accessible') || $el.attr('data-role') === 'tagsinput') {
                $el.parent().addClass('is-invalid');
            }

        },
        unhighlight: function (element) {
            $(element).parents('.form-group').find('.is-invalid').removeClass('is-invalid');
        }
    });
</script>
