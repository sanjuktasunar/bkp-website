@model IEnumerable<Web.Entity.Dto.MemberDto>
@{
    Layout = null;
    Web.Entity.Dto.MenuAccessPermissionDto menu = ViewBag.Menus;
    NumberSettings numberSettings = new NumberSettings();
}

<input type="hidden" id="hdnMemberIdFromSelection" />
<table class="table align-items-center table-flush table-hover" id="dataTable">
    <thead>
        <tr>
            <th>S.N.</th>
            <th>Details</th>
            <th>Share Details</th>
            <th>Seller Details</th>
            <th>Referred By</th>
            <th>Status</th>
        </tr>
    </thead>
    <tbody>
        @{
            int i = 0;
            decimal totalShareAmount = 0, totalSharePaidAmount = 0, totalShareDueAmount = 0;
            int totalShareKitta = 0;
            string totalShareAmountString = "",
                totalSharePaidAmountString = "",
                totalShareDueAmountString = "",
                totalShareKittaString = "";
        }
        @foreach (var x in Model)
        {
            string approvalClassName = "";
            x.TotalShareDueAmount = Convert.ToDecimal(x.TotalShareAmount) - Convert.ToDecimal(x.TotalSharePaidAmount);
            x.TotalShareDueAmountString = numberSettings.CommaSeparate(x.TotalShareDueAmount);
            x.TotalShareAmountString = numberSettings.CommaSeparate(Convert.ToDecimal(x.TotalShareAmount));
            x.TotalSharePaidAmountString = numberSettings.CommaSeparate(Convert.ToDecimal(x.TotalSharePaidAmount));

            totalShareAmount += Convert.ToDecimal(x.TotalShareAmount);
            totalSharePaidAmount += Convert.ToDecimal(x.TotalSharePaidAmount);
            totalShareDueAmount += Convert.ToDecimal(x.TotalShareDueAmount);
            totalShareKitta += Convert.ToInt32(x.AppliedShareKitta);

            i++;
            <tr>
                <td>
                    <input type="checkbox" name="chkSelectMember" value="true" />
                    <input type="hidden" name="hdnMemberId" value="@x.MemberId" />
                    @i
                </td>
                <td>
                    <a href="~/MemberDetails/@x.MemberId"
                       target="_blank">
                        @x.FullName
                        @if (!string.IsNullOrEmpty(x.ContactNumber))
                        {
                            <br />
                            <label>@x.ContactNumber</label>
                        }
                        @if (!string.IsNullOrEmpty(x.EmailAddress))
                        {
                            <br />
                            <label>@x.EmailAddress</label>
                        }
                        @if (!string.IsNullOrEmpty(x.ReferalCode))
                        {
                            <br />
                            <label>@x.ReferalCode</label>
                        }
                    </a>
                </td>
                <td>
                    @x.ShareTypeName <br />
                    @if (x.AppliedShareKitta > 0)
                    {
                        <b>Kitta : </b> <label>@x.AppliedShareKitta</label>
                    }
                    @if (x.ShareTypeId > 0)
                    {
                        <br />
                        <span class="badge badge-primary">
                            <b>TOTAL :</b>
                            @x.TotalShareAmountString
                        </span>
                        if (x.TotalShareDueAmount > 0)
                        {
                            <br />
                            <span class="badge badge-danger">
                                DUE : @x.TotalShareDueAmountString
                            </span>
                            <br />
                            <span class="badge badge-success">
                                PAID : @x.TotalSharePaidAmountString
                            </span>
                        }
                        else if (x.TotalShareDueAmount == 0 && x.AppliedShareKitta > 0)
                        {
                            <br />
                            <span class="badge badge-success">
                                PAID
                            </span>
                        }
                    }
                </td>
                <td>
                    @x.SellerFullName <br />
                    @x.SellerPhoneNumber
                </td>
                <td>
                    @x.ReferenceFullName <br />
                    @x.ReferencePhoneNumber
                </td>
                <td>
                    <label>
                        @if (x.IsApproved == Web.Entity.Infrastructure.ApprovalStatus.Approved)
                        {
                            approvalClassName = "badge badge-success";
                        }
                        else if (x.IsApproved == Web.Entity.Infrastructure.ApprovalStatus.Rejected)
                        {
                            approvalClassName = "badge badge-danger";
                        }
                        else
                        {
                            approvalClassName = "badge badge-primary";
                        }
                        <span class="@approvalClassName">@x.IsApproved</span>
                        @if (x.IsApproved == Web.Entity.Infrastructure.ApprovalStatus.Approved)
                        {
                            <label>
                                @Convert.ToDateTime(x.ApprovedDate).ToShortDateString()
                            </label>
                        }

                        @if (!string.IsNullOrEmpty(x.RejectRemarks) &&
                            x.IsApproved == Web.Entity.Infrastructure.ApprovalStatus.Rejected)
                        {
                            <br />
                            <span class="badge badge-dark">@x.RejectRemarks</span>
                        }
                    </label>
                </td>
            </tr>
        }
    </tbody>
    <tfoot>
        @{
            totalShareAmountString = numberSettings.CommaSeparate(totalShareAmount);
            totalSharePaidAmountString = numberSettings.CommaSeparate(totalSharePaidAmount);
            totalShareDueAmountString = numberSettings.CommaSeparate(totalShareDueAmount);
            totalShareKittaString = numberSettings.CommaSeparate(totalShareKitta);
        }
        <tr>
            <td>
                <span class="badge badge-info">
                    <b>Total Kitta</b> : @totalShareKittaString
                </span>
            </td>
            <td colspan="2">
                <span class="badge badge-info">
                    <b>Total Amount</b> : @totalShareAmountString
                </span>
            </td>
            <td colspan="2">
                <span class="badge badge-success">
                    <b>Total Paid Amount</b> : @totalSharePaidAmountString
                </span>
            </td>
            <td>
                <span class="badge badge-danger">
                    <b>Total Due</b> : @totalShareDueAmountString
                </span>
            </td>
        </tr>
    </tfoot>
</table>

<!-- reject Modal -->
<div class="modal fade" id="mdlRejectMember" tabindex="-1" role="dialog" aria-labelledby="rejectModalLabel" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">Reject Remarks</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <form id="form_validation">
                            <input type="hidden"
                                   id="hdnRejectMemberId" />
                            <fieldset>
                                <div class="row">
                                    <div class="col-md-12">
                                        <div class="form-group">
                                            <input type="text" placeholder="Enter Remarks"
                                                   class="form-control"
                                                   id="txtmdlRejectRemarks" />
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <div style="float:right">
                                <button type="submit" id="mdlBtnSaveRejectMember"
                                        class="btn btn-primary">
                                    Save
                                </button>
                                <button type="button" class="btn btn-secondary"
                                        data-dismiss="modal">
                                    Close
                                </button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>


<!-- add member to shareholder Modal -->
<div class="modal fade" id="addMemberToShareholder" tabindex="-1" role="dialog" aria-labelledby="addMemberToShareholder" aria-hidden="true">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header">
                <h5 class="modal-title" id="rejectModalLabel">Add to shareholder</h5>
                <button type="button" class="close" data-dismiss="modal" aria-label="Close">
                    <span aria-hidden="true">&times;</span>
                </button>
            </div>
            <div class="modal-body">
                <div class="row">
                    <div class="col-md-12">
                        <form id="member_Shareholder_form">
                            <input type="hidden" id="hdnMemberId" name="MemberId" />
                            <input type="hidden" id="hdnShareholderId" name="ShareholderId" />

                            <fieldset>
                                <div class="row">
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Applied Kitta</label>
                                            <input type="text" placeholder="Applied Kitta"
                                                   name="TotalKitta"
                                                   class="form-control" id="txtAppliedKitta" />
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <label>Share Type</label>
                                            <select class="form-control" id="ddlShareTypeId1"
                                                    name="ShareTypeId">
                                                <option value="">Select Value</option>
                                            </select>
                                        </div>
                                    </div>
                                    <div class="col-md-6">
                                        <div class="form-group">
                                            <div class="form-check">
                                                <label class="form-check-label">
                                                    <input class="form-check-input"
                                                           name="Status" checked="checked"
                                                           value="true" type="checkbox" />
                                                    Is Active
                                                </label>
                                            </div>
                                        </div>
                                    </div>
                                </div>
                            </fieldset>
                            <div style="float:right">
                                <button type="submit" id="btnAddShareholder"
                                        class="btn btn-primary">
                                    Save
                                </button>
                                <button type="button" class="btn btn-secondary" data-dismiss="modal">Close</button>
                            </div>
                        </form>
                    </div>
                </div>
            </div>
        </div>
    </div>
</div>

@Scripts.Render("~/web/backend/jquery-ui")
@Scripts.Render("~/web/backend/datatables")

<script>
    $("#dataTable").on('click', 'input[name="chkSelectMember"]', function () {
        $("#hdnMemberIdFromSelection").val('');
        var currentRow = $(this).closest("tr");
        var memberId = currentRow.find("td:eq(0)").find("input[name='hdnMemberId']").val();
        var isChecked = currentRow.find("td:eq(0)")
                        .find("input[name='chkSelectMember']").is(':checked');

        $(".btn-member-list").prop('disabled', true);
        if (isChecked == true) {
            $("#hdnMemberIdFromSelection").val(memberId);
            $.each($('input[name="chkSelectMember"]'), function () {
                this.checked = false;
            })
            $(".btn-member-list").prop('disabled', false);
            currentRow.find("td:eq(0)").find("input[name='chkSelectMember']").prop('checked', true);
        }
    });

    var memberId = 0;
    $("#btnEditMember").click(function (evt) {
        var check = checkMemberSelection();
        if (check == false)
            return false;
        window.location.href = "/ModifyMember/" + memberId;
    })

    $("#btnEditMemberApprove").click(function (evt) {
        var check = checkMemberSelection();
        if (check == false)
            return false;
        window.location.href = "/ModifyApprovedMember/" + memberId;
    })

    $("#btnApproveMember").click(function () {
        var check = checkMemberSelection();
        if (check == false)
            return false;

        swal({
            text: getApproveConfirmationMessage(),
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '/Member/Approve',
                        data: { MemberId: memberId },
                        success: function (resp) {
                            showResultMessage(resp, getCurrentUrl())
                        },
                        error: function (resp) {
                            showResultMessage(resp)
                        }
                    });
                }
            });
    })

    $("#btnRejectMember").click(function () {
        var check = checkMemberSelection();
        if (check == false)
            return false;

        swal({
            text: getRejectConfirmationMessage(),
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $("#hdnRejectMemberId").val(memberId);
                    $("#mdlRejectMember").modal();
                }
            });
    })

    $("#btnAddToShareholder").click(function () {
        var check = checkMemberSelection();
        if (check == false)
            return false;

        swal({
            text: "Are you sure you want to add this member to shareholder??",
            icon: "warning",
            buttons: true,
            dangerMode: true,
        })
            .then((willDelete) => {
                if (willDelete) {
                    $.ajax({
                        type: "POST",
                        url: '/Member/AddMemberToShareholder',
                        data: { MemberId: memberId },
                        success: function (resp) {
                            showResultMessage(resp, getCurrentUrl())
                        },
                        error: function (resp) {
                            showResultMessage(resp)
                        }
                    });
                }
            });
    })

    function checkMemberSelection() {
        memberId = $("#hdnMemberIdFromSelection").val();
        if (memberId == null || memberId == '' || memberId == undefined || memberId == 0) {
            var resp = {
                messageType: "error",
                message: "Please select member"
            };
            showMessage_Only(resp);
            return false;
        }
        return true;
    }

    $("#mdlBtnSaveRejectMember").click(function (evt) {
        evt.preventDefault();
        var rejectRemarks = $("#txtmdlRejectRemarks").val();
        if (!rejectRemarks.length) {
            highlightElement("#txtmdlRejectRemarks");
            return false;
        }
        $("#mdlBtnSaveRejectMember").html('Saving....')
        $("#mdlBtnSaveRejectMember").prop('disabled', true);
        $.ajax({
            type: 'post',
            url: '/Member/Reject',
            data: { memberId: memberId, remarks: rejectRemarks },
            success: function (resp) {
                $("#mdlBtnSaveRejectMember").html('Save')
                $("#mdlBtnSaveRejectMember").prop('disabled', false);
                showResultMessage(resp, getCurrentUrl());
            },
            error: function (resp) {
                $("#mdlBtnSaveRejectMember").html('Save')
                $("#mdlBtnSaveRejectMember").prop('disabled', false);
                showResultMessage(resp);
            }
        })
    })

    $("#dataTable").on('click', '#btnAddMemberToShareholder', function () {
        var currentRow = $(this).closest("tr");
        var shareholderId = currentRow.find("td:eq(0)").find("input[name='ShareholderId']").val();
        var shareTypeId = currentRow.find("td:eq(0)").find("input[name='ShareTypeId']").val();
        var appliedKitta = currentRow.find("td:eq(0)").find("input[name='AppliedKitta']").val();
        var memberId = currentRow.find("td:eq(1)").html();

        $("#hdnMemberId").val(memberId);
        $("#hdnShareholderId").val(shareholderId);

        if (parseInt(appliedKitta) > 0) {
            $("#txtAppliedKitta").val(appliedKitta);
        }


        $("#ddlShareTypeId1").val(shareTypeId);
        $("#addMemberToShareholder").modal();
    });

    function getCurrentUrl() {
        var ApprovalStatus = '@ViewBag.ApprovalStatus';
        var ReferenceId = '@ViewBag.ReferenceId';
        var ShareTypeId = '@ViewBag.ShareTypeId';
        var AgentId = '@ViewBag.ShareTypeId';
        var SearchQuery = '@ViewBag.SearchQuery';
        var SellerMemberId = '@ViewBag.SellerMemberId';

        var url = "/MemberList?ApprovalStatus=" + ApprovalStatus + "&ReferenceId=" + ReferenceId + "&ShareTypeId=" + ShareTypeId + "&AgentId=" + AgentId + "&SearchQuery=" + SearchQuery + "&SellerMemberId=" + SellerMemberId;
        return url;

    }

    $("#btnAddShareholder").click(function (evt) {
        evt.preventDefault();
        var totalKitta = $("#txtAppliedKitta").val();
        if (totalKitta == '' || totalKitta == 0 || parseInt(totalKitta)<=0) {
            showMessage_Only({ messageType: "error", message: "Please Enter Kitta" });
            return false;
        }
        $("#btnAddShareholder").prop('disabled', true);
        $("#btnAddShareholder").html('Saving......');
        $.ajax({
            type: 'post',
            url: '/Member/AddMemberToShareholder',
            data: $("#member_Shareholder_form").serialize(),
            success: function (resp) {
                showResultMessage(resp, getCurrentUrl());
                $("#btnAddShareholder").prop('disabled', false);
                $("#btnAddShareholder").html('Save');
            },
            error: function (resp) {
                showResultMessage(resp, getCurrentUrl());
            }
        })

    })
</script>

